// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bounty
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-27, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=bounty
// --extrinsic=*
// --chain=prod-test
// --steps=50
// --repeat=20
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/bounty/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for bounty.
pub trait WeightInfo {
	fn create_bounty_by_council(_i: u32, _j: u32, ) -> Weight;
	fn create_bounty_by_member(_i: u32, _j: u32, ) -> Weight;
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_work_or_judging_period() -> Weight;
	fn fund_bounty_by_member() -> Weight;
	fn fund_bounty_by_council() -> Weight;
	fn withdraw_funding_by_member() -> Weight;
	fn withdraw_funding_by_council() -> Weight;
	fn announce_work_entry(_i: u32, _j: u32, ) -> Weight;
	fn submit_work(_i: u32, ) -> Weight;
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn switch_oracle_to_council_by_council_successful() -> Weight;
	fn switch_oracle_to_member_by_oracle_council() -> Weight;
	fn switch_oracle_to_member_by_council() -> Weight;
	fn switch_oracle_to_member_by_oracle_member() -> Weight;
	fn switch_oracle_to_council_by_oracle_member() -> Weight;
	fn end_working_period() -> Weight;
	fn withdraw_entrant_stake() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight;
	fn withdraw_oracle_reward_by_oracle_council() -> Weight;
	fn withdraw_oracle_reward_by_oracle_member() -> Weight;
	fn entrant_remark(_i: u32, ) -> Weight;
	fn contributor_remark(_i: u32, ) -> Weight;
	fn oracle_remark(_i: u32, ) -> Weight;
	fn creator_remark(_i: u32, ) -> Weight;
}

/// Weights for bounty using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:50 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Proof: Bounty BountyCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:0 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `463 + j * (166 ±0)`
		//  Estimated: `3613 + j * (2600 ±0)`
		// Minimum execution time: 188_421 nanoseconds.
		Weight::from_ref_time(75_620_767)
			.saturating_add(Weight::from_proof_size(3613))
			// Standard Error: 7_948
			.saturating_add(Weight::from_ref_time(1_138_259).saturating_mul(i.into()))
			// Standard Error: 16_092
			.saturating_add(Weight::from_ref_time(4_436_688).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_proof_size(2600).saturating_mul(j.into()))
	}
	// Storage: Membership MembershipById (r:51 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Proof: Bounty BountyCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:0 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `501 + j * (168 ±0)`
		//  Estimated: `8305 + j * (2600 ±0)`
		// Minimum execution time: 193_826 nanoseconds.
		Weight::from_ref_time(88_109_671)
			.saturating_add(Weight::from_proof_size(8305))
			// Standard Error: 8_400
			.saturating_add(Weight::from_ref_time(1_074_934).saturating_mul(i.into()))
			// Standard Error: 17_008
			.saturating_add(Weight::from_ref_time(4_352_352).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_proof_size(2600).saturating_mul(j.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `620`
		//  Estimated: `8685`
		// Minimum execution time: 67_627 nanoseconds.
		Weight::from_ref_time(68_828_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `620`
		//  Estimated: `8685`
		// Minimum execution time: 97_950 nanoseconds.
		Weight::from_ref_time(99_171_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `620`
		//  Estimated: `8685`
		// Minimum execution time: 67_557 nanoseconds.
		Weight::from_ref_time(68_641_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `620`
		//  Estimated: `8685`
		// Minimum execution time: 97_430 nanoseconds.
		Weight::from_ref_time(98_920_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `8127`
		// Minimum execution time: 39_082 nanoseconds.
		Weight::from_ref_time(39_964_000)
			.saturating_add(Weight::from_proof_size(8127))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `8127`
		// Minimum execution time: 45_856 nanoseconds.
		Weight::from_ref_time(46_963_000)
			.saturating_add(Weight::from_proof_size(8127))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_work_or_judging_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `8127`
		// Minimum execution time: 39_197 nanoseconds.
		Weight::from_ref_time(39_814_000)
			.saturating_add(Weight::from_proof_size(8127))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn fund_bounty_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `800`
		//  Estimated: `13377`
		// Minimum execution time: 82_104 nanoseconds.
		Weight::from_ref_time(83_047_000)
			.saturating_add(Weight::from_proof_size(13377))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn fund_bounty_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `616`
		//  Estimated: `8685`
		// Minimum execution time: 70_281 nanoseconds.
		Weight::from_ref_time(70_827_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_funding_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `907`
		//  Estimated: `13377`
		// Minimum execution time: 78_804 nanoseconds.
		Weight::from_ref_time(79_844_000)
			.saturating_add(Weight::from_proof_size(13377))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_funding_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `715`
		//  Estimated: `8685`
		// Minimum execution time: 68_534 nanoseconds.
		Weight::from_ref_time(69_548_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty EntryCount (r:1 w:1)
	// Proof: Bounty EntryCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:0 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1067 + j * (36 ±0)`
		//  Estimated: `15023`
		// Minimum execution time: 104_412 nanoseconds.
		Weight::from_ref_time(84_559_006)
			.saturating_add(Weight::from_proof_size(15023))
			// Standard Error: 3_769
			.saturating_add(Weight::from_ref_time(1_284_525).saturating_mul(i.into()))
			// Standard Error: 7_631
			.saturating_add(Weight::from_ref_time(368_774).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn submit_work(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696`
		//  Estimated: `8183`
		// Minimum execution time: 40_341 nanoseconds.
		Weight::from_ref_time(42_355_748)
			.saturating_add(Weight::from_proof_size(8183))
			// Standard Error: 2_741
			.saturating_add(Weight::from_ref_time(1_236_917).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:40 w:40)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:40 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:41 w:41)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:40 w:40)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	/// The range of component `j` is `[0, 100]`.
	/// The range of component `k` is `[0, 100]`.
	/// The range of component `w` is `[1, 20]`.
	/// The range of component `r` is `[1, 20]`.
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `989 + w * (576 ±0) + r * (576 ±0)`
		//  Estimated: `6129 + w * (11545 ±0) + r * (11545 ±0)`
		// Minimum execution time: 1_551_412 nanoseconds.
		Weight::from_ref_time(1_570_319_000)
			.saturating_add(Weight::from_proof_size(6129))
			// Standard Error: 451_018
			.saturating_add(Weight::from_ref_time(38_106_635).saturating_mul(w.into()))
			// Standard Error: 451_018
			.saturating_add(Weight::from_ref_time(54_928_319).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_proof_size(11545).saturating_mul(w.into()))
			.saturating_add(Weight::from_proof_size(11545).saturating_mul(r.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:40 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:39 w:39)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: System Account (r:40 w:40)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:39 w:39)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	/// The range of component `j` is `[0, 100]`.
	/// The range of component `k` is `[0, 100]`.
	/// The range of component `w` is `[1, 20]`.
	/// The range of component `r` is `[1, 19]`.
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1117 + w * (579 ±0) + r * (579 ±0)`
		//  Estimated: `8729 + w * (11545 ±0) + r * (11545 ±0)`
		// Minimum execution time: 1_560_712 nanoseconds.
		Weight::from_ref_time(1_571_970_000)
			.saturating_add(Weight::from_proof_size(8729))
			// Standard Error: 449_548
			.saturating_add(Weight::from_ref_time(38_446_416).saturating_mul(w.into()))
			// Standard Error: 473_583
			.saturating_add(Weight::from_ref_time(53_920_276).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_proof_size(11545).saturating_mul(w.into()))
			.saturating_add(Weight::from_proof_size(11545).saturating_mul(r.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `216`
		//  Estimated: `3015`
		// Minimum execution time: 29_582 nanoseconds.
		Weight::from_ref_time(30_303_000)
			.saturating_add(Weight::from_proof_size(3015))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `493`
		//  Estimated: `5615`
		// Minimum execution time: 36_182 nanoseconds.
		Weight::from_ref_time(36_815_000)
			.saturating_add(Weight::from_proof_size(5615))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `538`
		//  Estimated: `5615`
		// Minimum execution time: 37_485 nanoseconds.
		Weight::from_ref_time(38_548_000)
			.saturating_add(Weight::from_proof_size(5615))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:2 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `669`
		//  Estimated: `8215`
		// Minimum execution time: 41_300 nanoseconds.
		Weight::from_ref_time(42_374_000)
			.saturating_add(Weight::from_proof_size(8215))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `501`
		//  Estimated: `5615`
		// Minimum execution time: 35_897 nanoseconds.
		Weight::from_ref_time(36_786_000)
			.saturating_add(Weight::from_proof_size(5615))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn end_working_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `622`
		//  Estimated: `5615`
		// Minimum execution time: 38_443 nanoseconds.
		Weight::from_ref_time(38_978_000)
			.saturating_add(Weight::from_proof_size(5615))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_entrant_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1022`
		//  Estimated: `14560`
		// Minimum execution time: 65_585 nanoseconds.
		Weight::from_ref_time(66_316_000)
			.saturating_add(Weight::from_proof_size(14560))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `738`
		//  Estimated: `8685`
		// Minimum execution time: 67_751 nanoseconds.
		Weight::from_ref_time(68_569_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1035`
		//  Estimated: `13377`
		// Minimum execution time: 77_515 nanoseconds.
		Weight::from_ref_time(79_395_000)
			.saturating_add(Weight::from_proof_size(13377))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `611`
		//  Estimated: `8685`
		// Minimum execution time: 99_735 nanoseconds.
		Weight::from_ref_time(100_642_000)
			.saturating_add(Weight::from_proof_size(8685))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1076`
		//  Estimated: `13888`
		// Minimum execution time: 117_474 nanoseconds.
		Weight::from_ref_time(121_142_000)
			.saturating_add(Weight::from_proof_size(13888))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:0)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn entrant_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `555`
		//  Estimated: `5168`
		// Minimum execution time: 30_959 nanoseconds.
		Weight::from_ref_time(31_654_337)
			.saturating_add(Weight::from_proof_size(5168))
			// Standard Error: 2_064
			.saturating_add(Weight::from_ref_time(1_243_665).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn contributor_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `454`
		//  Estimated: `5156`
		// Minimum execution time: 30_162 nanoseconds.
		Weight::from_ref_time(29_958_534)
			.saturating_add(Weight::from_proof_size(5156))
			// Standard Error: 12_068
			.saturating_add(Weight::from_ref_time(1_113_401).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn oracle_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `236`
		//  Estimated: `3015`
		// Minimum execution time: 22_911 nanoseconds.
		Weight::from_ref_time(23_604_997)
			.saturating_add(Weight::from_proof_size(3015))
			// Standard Error: 2_365
			.saturating_add(Weight::from_ref_time(1_081_347).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn creator_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `236`
		//  Estimated: `3015`
		// Minimum execution time: 22_842 nanoseconds.
		Weight::from_ref_time(23_387_934)
			.saturating_add(Weight::from_proof_size(3015))
			// Standard Error: 1_934
			.saturating_add(Weight::from_ref_time(1_087_562).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_work_or_judging_period() -> Weight {
		Weight::from_ref_time(0)
	}
	fn fund_bounty_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn fund_bounty_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_work(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn end_working_period() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_entrant_stake() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn entrant_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn contributor_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn oracle_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn creator_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
}
