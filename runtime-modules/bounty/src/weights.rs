// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bounty
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-20, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./../target/release/joystream-node
// benchmark
// pallet
// --base-path=/mnt/disks/local-ssd/
// --pallet=bounty
// --extrinsic=*
// --chain=dev
// --steps=50
// --repeat=20
// --execution=wasm
// --template=./../devops/joystream-pallet-weight-template.hbs
// --output=./../runtime-modules/bounty/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for bounty.
pub trait WeightInfo {
	fn create_bounty_by_council(_i: u32, _j: u32, ) -> Weight;
	fn create_bounty_by_member(_i: u32, _j: u32, ) -> Weight;
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_work_or_judging_period() -> Weight;
	fn fund_bounty_by_member() -> Weight;
	fn fund_bounty_by_council() -> Weight;
	fn withdraw_funding_by_member() -> Weight;
	fn withdraw_funding_by_council() -> Weight;
	fn announce_work_entry(_i: u32, _j: u32, ) -> Weight;
	fn submit_work(_i: u32, ) -> Weight;
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn switch_oracle_to_council_by_council_successful() -> Weight;
	fn switch_oracle_to_member_by_oracle_council() -> Weight;
	fn switch_oracle_to_member_by_council() -> Weight;
	fn switch_oracle_to_member_by_oracle_member() -> Weight;
	fn switch_oracle_to_council_by_oracle_member() -> Weight;
	fn end_working_period() -> Weight;
	fn withdraw_entrant_stake() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight;
	fn withdraw_oracle_reward_by_oracle_council() -> Weight;
	fn withdraw_oracle_reward_by_oracle_member() -> Weight;
	fn entrant_remark(_i: u32, ) -> Weight;
	fn contributor_remark(_i: u32, ) -> Weight;
	fn oracle_remark(_i: u32, ) -> Weight;
	fn creator_remark(_i: u32, ) -> Weight;
}

/// Weights for bounty using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:50 w:0)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Bounty Bounties (r:0 w:1)
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(66_826_000)
			// Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(594_000).saturating_mul(i.into()))
			// Standard Error: 8_000
			.saturating_add(Weight::from_ref_time(5_110_000).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:51 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Storage: Bounty Bounties (r:0 w:1)
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(67_970_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(671_000).saturating_mul(i.into()))
			// Standard Error: 10_000
			.saturating_add(Weight::from_ref_time(5_173_000).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(56_590_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(83_450_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(56_290_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(83_020_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(31_990_000)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(38_500_000)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_work_or_judging_period() -> Weight {
		Weight::from_ref_time(31_911_000)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn fund_bounty_by_member() -> Weight {
		Weight::from_ref_time(69_380_000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn fund_bounty_by_council() -> Weight {
		Weight::from_ref_time(58_100_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn withdraw_funding_by_member() -> Weight {
		Weight::from_ref_time(65_930_000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_funding_by_council() -> Weight {
		Weight::from_ref_time(57_700_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Bounty EntryCount (r:1 w:1)
	// Storage: Bounty Entries (r:0 w:1)
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(64_714_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(791_000).saturating_mul(i.into()))
			// Standard Error: 10_000
			.saturating_add(Weight::from_ref_time(350_000).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty Entries (r:1 w:1)
	fn submit_work(i: u32, ) -> Weight {
		Weight::from_ref_time(35_985_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(722_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty Entries (r:40 w:40)
	// Storage: Membership MembershipById (r:40 w:0)
	// Storage: System Account (r:41 w:41)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Balances Locks (r:40 w:40)
	fn submit_oracle_judgment_by_council(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
			// Standard Error: 13_000
			.saturating_add(Weight::from_ref_time(886_000).saturating_mul(j.into()))
			// Standard Error: 13_000
			.saturating_add(Weight::from_ref_time(824_000).saturating_mul(k.into()))
			// Standard Error: 95_000
			.saturating_add(Weight::from_ref_time(60_240_000).saturating_mul(w.into()))
			// Standard Error: 95_000
			.saturating_add(Weight::from_ref_time(76_631_000).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:40 w:0)
	// Storage: Bounty Entries (r:39 w:39)
	// Storage: System Account (r:40 w:40)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Balances Locks (r:39 w:39)
	fn submit_oracle_judgment_by_member(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
			// Standard Error: 25_000
			.saturating_add(Weight::from_ref_time(970_000).saturating_mul(j.into()))
			// Standard Error: 25_000
			.saturating_add(Weight::from_ref_time(1_037_000).saturating_mul(k.into()))
			// Standard Error: 176_000
			.saturating_add(Weight::from_ref_time(60_734_000).saturating_mul(w.into()))
			// Standard Error: 189_000
			.saturating_add(Weight::from_ref_time(75_651_000).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		Weight::from_ref_time(25_029_000)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		Weight::from_ref_time(29_030_000)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_member_by_council() -> Weight {
		Weight::from_ref_time(30_520_000)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:2 w:0)
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		Weight::from_ref_time(34_780_000)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		Weight::from_ref_time(29_320_000)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn end_working_period() -> Weight {
		Weight::from_ref_time(30_200_000)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty Entries (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn withdraw_entrant_stake() -> Weight {
		Weight::from_ref_time(52_629_000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		Weight::from_ref_time(56_640_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		Weight::from_ref_time(65_190_000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		Weight::from_ref_time(85_380_000)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		Weight::from_ref_time(99_320_000)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Entries (r:1 w:0)
	fn entrant_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(24_192_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(735_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:0)
	fn contributor_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(23_858_000)
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(664_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	fn oracle_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(19_514_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(672_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	fn creator_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(19_577_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(671_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_ref_time(0)
	}
	fn terminate_bounty_work_or_judging_period() -> Weight {
		Weight::from_ref_time(0)
	}
	fn fund_bounty_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn fund_bounty_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_work(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_oracle_judgment_by_council(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn submit_oracle_judgment_by_member(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn end_working_period() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_entrant_stake() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		Weight::from_ref_time(0)
	}
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		Weight::from_ref_time(0)
	}
	fn entrant_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn contributor_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn oracle_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn creator_remark(i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
}
