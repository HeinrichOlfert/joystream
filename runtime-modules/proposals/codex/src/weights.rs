// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for proposals_codex
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-06, STEPS: `2`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=proposals_codex
// --extrinsic=*
// --chain=prod-test
// --steps=2
// --repeat=1
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/proposals/codex/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for proposals_codex.
pub trait WeightInfo {
	fn create_proposal_signal(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_runtime_upgrade(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_funding_request(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_max_validator_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_veto_proposal(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_create_working_group_lead_opening(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_fill_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_working_group_budget(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_working_group_lead_stake(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_slash_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_working_group_lead_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_terminate_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_amend_constitution(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_cancel_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_price(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_council_budget_increment(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_councilor_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_balance(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_lead_invitation_quota(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_referral_cut(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_global_nft_limit(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_channel_payouts(_t: u32, _d: u32, _i: u32, ) -> Weight;
	fn create_proposal_freeze_pallet(_t: u32, _d: u32, ) -> Weight;
}

/// Weights for proposals_codex using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 93_000 nanoseconds.
		Weight::from_parts(78_744_107, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 6_734
			.saturating_add(Weight::from_parts(922_558, 0u64).saturating_mul(i.into()))
			// Standard Error: 35_087
			.saturating_add(Weight::from_parts(280_701, 0u64).saturating_mul(t.into()))
			// Standard Error: 35_087
			.saturating_add(Weight::from_parts(385_964, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_runtime_upgrade(i: u32, _t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 91_000 nanoseconds.
		Weight::from_parts(96_784_511, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 29_352
			.saturating_add(Weight::from_parts(882_154, 0u64).saturating_mul(i.into()))
			// Standard Error: 152_943
			.saturating_add(Weight::from_parts(70_175, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 20]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 76_000 nanoseconds.
		Weight::from_parts(48_964_912, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 126_510
			.saturating_add(Weight::from_parts(333_333, 0u64).saturating_mul(i.into()))
			// Standard Error: 126_510
			.saturating_add(Weight::from_parts(964_912, 0u64).saturating_mul(t.into()))
			// Standard Error: 126_510
			.saturating_add(Weight::from_parts(1_070_175, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Staking MinimumValidatorCount (r:1 w:0)
	// Proof: Staking MinimumValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1167`
		//  Estimated: `21429`
		// Minimum execution time: 74_000 nanoseconds.
		Weight::from_parts(58_368_421, 0u64)
			.saturating_add(Weight::from_parts(0, 21429))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(736_842, 0u64).saturating_mul(t.into()))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(894_736, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: ProposalEngine Proposals (r:1 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013`
		//  Estimated: `23545`
		// Minimum execution time: 79_000 nanoseconds.
		Weight::from_parts(70_552_631, 0u64)
			.saturating_add(Weight::from_parts(0, 23545))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(394_736, 0u64).saturating_mul(t.into()))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(552_631, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 94_000 nanoseconds.
		Weight::from_parts(67_062_023, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 57_535
			.saturating_add(Weight::from_parts(973_063, 0u64).saturating_mul(i.into()))
			// Standard Error: 299_789
			.saturating_add(Weight::from_parts(701_754, 0u64).saturating_mul(t.into()))
			// Standard Error: 299_789
			.saturating_add(Weight::from_parts(596_491, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Instance1WorkingGroup ApplicationById (r:1 w:0)
	// Proof: Instance1WorkingGroup ApplicationById (max_values: None, max_size: Some(168), added: 2643, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1038`
		//  Estimated: `27152`
		// Minimum execution time: 85_000 nanoseconds.
		Weight::from_parts(68_421_052, 0u64)
			.saturating_add(Weight::from_parts(0, 27152))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(t.into()))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 70_000 nanoseconds.
		Weight::from_parts(54_921_052, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(710_526, 0u64).saturating_mul(t.into()))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(868_421, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 75_000 nanoseconds.
		Weight::from_parts(61_026_315, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 45_580
			.saturating_add(Weight::from_parts(657_894, 0u64).saturating_mul(t.into()))
			// Standard Error: 45_580
			.saturating_add(Weight::from_parts(815_789, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 75_000 nanoseconds.
		Weight::from_parts(58_368_421, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 182_321
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(t.into()))
			// Standard Error: 182_321
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 75_000 nanoseconds.
		Weight::from_parts(59_973_684, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 45_580
			.saturating_add(Weight::from_parts(815_789, 0u64).saturating_mul(t.into()))
			// Standard Error: 45_580
			.saturating_add(Weight::from_parts(710_526, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 74_000 nanoseconds.
		Weight::from_parts(62_026_315, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(921_052, 0u64).saturating_mul(t.into()))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(552_631, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 89_000 nanoseconds.
		Weight::from_parts(76_144_249, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 40_961
			.saturating_add(Weight::from_parts(925_925, 0u64).saturating_mul(i.into()))
			// Standard Error: 213_430
			.saturating_add(Weight::from_parts(245_614, 0u64).saturating_mul(t.into()))
			// Standard Error: 213_430
			.saturating_add(Weight::from_parts(350_877, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `803`
		//  Estimated: `23519`
		// Minimum execution time: 76_000 nanoseconds.
		Weight::from_parts(58_315_789, 0u64)
			.saturating_add(Weight::from_parts(0, 23519))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(t.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 70_000 nanoseconds.
		Weight::from_parts(56_526_315, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(631_578, 0u64).saturating_mul(t.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 71_000 nanoseconds.
		Weight::from_parts(55_473_684, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(t.into()))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(736_842, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 71_000 nanoseconds.
		Weight::from_parts(52_157_894, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(894_736, 0u64).saturating_mul(t.into()))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(947_368, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 70_000 nanoseconds.
		Weight::from_parts(56_526_315, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(631_578, 0u64).saturating_mul(t.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 71_000 nanoseconds.
		Weight::from_parts(55_473_684, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(t.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(736_842, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 71_000 nanoseconds.
		Weight::from_parts(54_921_052, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(815_789, 0u64).saturating_mul(t.into()))
			// Standard Error: 136_740
			.saturating_add(Weight::from_parts(763_157, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 69_000 nanoseconds.
		Weight::from_parts(50_157_894, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(894_736, 0u64).saturating_mul(t.into()))
			// Standard Error: 91_160
			.saturating_add(Weight::from_parts(947_368, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 71_000 nanoseconds.
		Weight::from_parts(53_315_789, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(t.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(842_105, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	/// The range of component `i` is `[0, 100]`.
	fn create_proposal_update_channel_payouts(_t: u32, d: u32, i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 89_000 nanoseconds.
		Weight::from_parts(79_175_438, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 92_833
			.saturating_add(Weight::from_parts(666_666, 0u64).saturating_mul(d.into()))
			// Standard Error: 17_638
			.saturating_add(Weight::from_parts(946_666, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 74_000 nanoseconds.
		Weight::from_parts(58_473_684, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 182_321
			.saturating_add(Weight::from_parts(736_842, 0u64).saturating_mul(t.into()))
			// Standard Error: 182_321
			.saturating_add(Weight::from_parts(789_473, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_runtime_upgrade(i: u32, _t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_channel_payouts(_t: u32, d: u32, i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
}
