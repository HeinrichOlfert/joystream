// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for proposals_codex
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-15, STEPS: `2`, REPEAT: 2, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=proposals_codex
// --extrinsic=*
// --chain=prod-test
// --steps=2
// --repeat=2
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/proposals/codex/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for proposals_codex.
pub trait WeightInfo {
	fn create_proposal_signal(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_runtime_upgrade(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_funding_request(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_max_validator_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_veto_proposal(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_create_working_group_lead_opening(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_fill_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_working_group_budget(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_working_group_lead_stake(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_slash_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_working_group_lead_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_terminate_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_amend_constitution(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_cancel_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_price(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_council_budget_increment(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_councilor_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_balance(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_lead_invitation_quota(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_referral_cut(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_global_nft_limit(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_channel_payouts(_t: u32, _d: u32, _i: u32, ) -> Weight;
}

/// Weights for proposals_codex using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_signal(i: u32, _t: u32, _d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 86_000 nanoseconds.
		Weight::from_ref_time(139_119_085)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 284_547
			.saturating_add(Weight::from_ref_time(828_282).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 85_000 nanoseconds.
		Weight::from_ref_time(76_070_042)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 110_405
			.saturating_add(Weight::from_ref_time(851_010).saturating_mul(i.into()))
			// Standard Error: 575_272
			.saturating_add(Weight::from_ref_time(302_631).saturating_mul(t.into()))
			// Standard Error: 575_272
			.saturating_add(Weight::from_ref_time(276_315).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 20]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 73_000 nanoseconds.
		Weight::from_ref_time(54_710_526)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 176_040
			.saturating_add(Weight::from_ref_time(184_210).saturating_mul(i.into()))
			// Standard Error: 176_040
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(t.into()))
			// Standard Error: 176_040
			.saturating_add(Weight::from_ref_time(842_105).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Staking MinimumValidatorCount (r:1 w:0)
	// Proof: Staking MinimumValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1264`
		//  Estimated: `13509`
		// Minimum execution time: 72_000 nanoseconds.
		Weight::from_ref_time(60_605_263)
			.saturating_add(Weight::from_proof_size(13509))
			// Standard Error: 259_625
			.saturating_add(Weight::from_ref_time(631_578).saturating_mul(t.into()))
			// Standard Error: 259_625
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: ProposalEngine Proposals (r:1 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1110`
		//  Estimated: `15625`
		// Minimum execution time: 77_000 nanoseconds.
		Weight::from_ref_time(68_421_052)
			.saturating_add(Weight::from_proof_size(15625))
			// Standard Error: 167_816
			.saturating_add(Weight::from_ref_time(552_631).saturating_mul(t.into()))
			// Standard Error: 167_816
			.saturating_add(Weight::from_ref_time(526_315).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 81_000 nanoseconds.
		Weight::from_ref_time(66_677_033)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 112_678
			.saturating_add(Weight::from_ref_time(954_545).saturating_mul(i.into()))
			// Standard Error: 587_113
			.saturating_add(Weight::from_ref_time(342_105).saturating_mul(t.into()))
			// Standard Error: 587_113
			.saturating_add(Weight::from_ref_time(526_315).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Instance1WorkingGroup ApplicationById (r:1 w:0)
	// Proof: Instance1WorkingGroup ApplicationById (max_values: None, max_size: Some(168), added: 2643, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1199`
		//  Estimated: `18242`
		// Minimum execution time: 79_000 nanoseconds.
		Weight::from_ref_time(65_947_368)
			.saturating_add(Weight::from_proof_size(18242))
			// Standard Error: 188_545
			.saturating_add(Weight::from_ref_time(736_842).saturating_mul(t.into()))
			// Standard Error: 188_545
			.saturating_add(Weight::from_ref_time(815_789).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 67_000 nanoseconds.
		Weight::from_ref_time(55_578_947)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 231_419
			.saturating_add(Weight::from_ref_time(631_578).saturating_mul(t.into()))
			// Standard Error: 231_419
			.saturating_add(Weight::from_ref_time(789_473).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883`
		//  Estimated: `13513`
		// Minimum execution time: 73_000 nanoseconds.
		Weight::from_ref_time(61_078_947)
			.saturating_add(Weight::from_proof_size(13513))
			// Standard Error: 213_790
			.saturating_add(Weight::from_ref_time(736_842).saturating_mul(t.into()))
			// Standard Error: 213_790
			.saturating_add(Weight::from_ref_time(684_210).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883`
		//  Estimated: `13513`
		// Minimum execution time: 73_000 nanoseconds.
		Weight::from_ref_time(61_131_578)
			.saturating_add(Weight::from_proof_size(13513))
			// Standard Error: 215_939
			.saturating_add(Weight::from_ref_time(657_894).saturating_mul(t.into()))
			// Standard Error: 215_939
			.saturating_add(Weight::from_ref_time(710_526).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883`
		//  Estimated: `13513`
		// Minimum execution time: 72_000 nanoseconds.
		Weight::from_ref_time(59_552_631)
			.saturating_add(Weight::from_proof_size(13513))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(684_210).saturating_mul(t.into()))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883`
		//  Estimated: `13513`
		// Minimum execution time: 72_000 nanoseconds.
		Weight::from_ref_time(60_605_263)
			.saturating_add(Weight::from_proof_size(13513))
			// Standard Error: 229_415
			.saturating_add(Weight::from_ref_time(631_578).saturating_mul(t.into()))
			// Standard Error: 229_415
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 82_000 nanoseconds.
		Weight::from_ref_time(81_414_673)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 131_628
			.saturating_add(Weight::from_ref_time(848_484).saturating_mul(i.into()))
			// Standard Error: 685_853
			.saturating_add(Weight::from_ref_time(52_631).saturating_mul(t.into()))
			// Standard Error: 685_853
			.saturating_add(Weight::from_ref_time(184_210).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `932`
		//  Estimated: `15599`
		// Minimum execution time: 73_000 nanoseconds.
		Weight::from_ref_time(61_657_894)
			.saturating_add(Weight::from_proof_size(15599))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(631_578).saturating_mul(t.into()))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(710_526).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(55_500_000)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 225_354
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(t.into()))
			// Standard Error: 225_354
			.saturating_add(Weight::from_ref_time(736_842).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(53_973_684)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 195_753
			.saturating_add(Weight::from_ref_time(736_842).saturating_mul(t.into()))
			// Standard Error: 195_753
			.saturating_add(Weight::from_ref_time(789_473).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(57_131_578)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 244_042
			.saturating_add(Weight::from_ref_time(605_263).saturating_mul(t.into()))
			// Standard Error: 244_042
			.saturating_add(Weight::from_ref_time(763_157).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(55_526_315)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 237_328
			.saturating_add(Weight::from_ref_time(657_894).saturating_mul(t.into()))
			// Standard Error: 237_328
			.saturating_add(Weight::from_ref_time(815_789).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(55_078_947)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 193_380
			.saturating_add(Weight::from_ref_time(710_526).saturating_mul(t.into()))
			// Standard Error: 193_380
			.saturating_add(Weight::from_ref_time(710_526).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 67_000 nanoseconds.
		Weight::from_ref_time(58_263_157)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 236_354
			.saturating_add(Weight::from_ref_time(552_631).saturating_mul(t.into()))
			// Standard Error: 236_354
			.saturating_add(Weight::from_ref_time(684_210).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(56_657_894)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(631_578).saturating_mul(t.into()))
			// Standard Error: 203_841
			.saturating_add(Weight::from_ref_time(710_526).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 68_000 nanoseconds.
		Weight::from_ref_time(55_078_947)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 195_753
			.saturating_add(Weight::from_ref_time(684_210).saturating_mul(t.into()))
			// Standard Error: 195_753
			.saturating_add(Weight::from_ref_time(736_842).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	/// The range of component `i` is `[0, 100]`.
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `748`
		//  Estimated: `13010`
		// Minimum execution time: 83_000 nanoseconds.
		Weight::from_ref_time(66_500_000)
			.saturating_add(Weight::from_proof_size(13010))
			// Standard Error: 697_368
			.saturating_add(Weight::from_ref_time(578_947).saturating_mul(t.into()))
			// Standard Error: 697_368
			.saturating_add(Weight::from_ref_time(421_052).saturating_mul(d.into()))
			// Standard Error: 132_500
			.saturating_add(Weight::from_ref_time(895_000).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_proposal_signal(i: u32, _t: u32, _d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		Weight::from_ref_time(0)
	}
}
